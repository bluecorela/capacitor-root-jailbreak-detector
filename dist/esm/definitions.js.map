{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["export interface RootJailBreakDetectorPlugin {\n  isRooted(): Promise<{ isRooted: boolean }>;\n  isRootedWithBusyBox(): Promise<{ isRooted: boolean }>;\n  isRootedWithEmulator(): Promise<{ isRooted: boolean }>;\n  isRootedWithBusyBoxWithEmulator(): Promise<{ isRooted: boolean }>;\n  isDetectRootManagementAppsRooted(): Promise<{ isRooted: boolean }>;\n  isDetectPotentiallyDangerousAppsRooted(): Promise<{ isRooted: boolean }>;\n  isTestKeysRooted(): Promise<{ isRooted: boolean }>;\n  isCheckForBusyBoxBinaryRooted(): Promise<{ isRooted: boolean }>;\n  isCheckForSuBinaryRooted(): Promise<{ isRooted: boolean }>;\n  isCheckSuExistsRooted(): Promise<{ isRooted: boolean }>;\n  isCheckForRWPathsRooted(): Promise<{ isRooted: boolean }>;\n  isCheckForDangerousPropsRooted(): Promise<{ isRooted: boolean }>;\n  isCheckForRootNativeRooted(): Promise<{ isRooted: boolean }>;\n  isDetectRootCloakingAppsRooted(): Promise<{ isRooted: boolean }>;\n  isSelinuxFlagInEnabled(): Promise<{ isRooted: boolean }>;\n  isExistBuildTagsRooted(): Promise<{ isRooted: boolean }>;\n  doesSuperuserApkExistRooted(): Promise<{ isRooted: boolean }>;\n  isExistSUPathRooted(): Promise<{ isRooted: boolean }>;\n  isCheckDirPermissionsRooted(): Promise<{ isRooted: boolean }>;\n  isCheckExecutingCommandsRooted(): Promise<{ isRooted: boolean }>;\n  isCheckInstalledPackagesRooted(): Promise<{ isRooted: boolean }>;\n  isCheckforOverTheAirCertificatesRooted(): Promise<{ isRooted: boolean }>;\n  isRunningOnEmulatorRooted(): Promise<{ isRooted: boolean }>;\n  isRunningOnEmulator(): Promise<{ isRooted: boolean }>;\n  simpleCheckEmulatorRooted(): Promise<{ isRooted: boolean }>;\n  simpleCheckSDKBF86Rooted(): Promise<{ isRooted: boolean }>;\n  simpleCheckQRREFPHRooted(): Promise<{ isRooted: boolean }>;\n  simpleCheckBuildRooted(): Promise<{ isRooted: boolean }>;\n  checkGenymotionRooted(): Promise<{ isRooted: boolean }>;\n  checkGenericRooted(): Promise<{ isRooted: boolean }>;\n  checkGoogleSDKRooted(): Promise<{ isRooted: boolean }>;\n  getDeviceInfo(): Promise<DeviceInfo>;\n}\n\nexport interface DeviceInfo {\n  DEVICE: string,\n  MODEL: string,\n  MANUFACTURER: string,\n  BRAND: string,\n  BOARD: string,\n  HARDWARE: string,\n  PRODUCT: string,\n  FINGERPRINT: string,\n  HOST: string,\n  USER: string,\n  OSNAME: string,\n  OSVERSION: string,\n  V_INCREMENTAL: string,\n  V_RELEASE: string,\n  V_SDK_INT: string\n}\n"]}